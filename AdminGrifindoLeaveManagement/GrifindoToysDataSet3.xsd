<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GrifindoToysDataSet3" targetNamespace="http://tempuri.org/GrifindoToysDataSet3.xsd" xmlns:mstns="http://tempuri.org/GrifindoToysDataSet3.xsd" xmlns="http://tempuri.org/GrifindoToysDataSet3.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="GrifindoToysConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="GrifindoToysConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.AdminGrifindoLeaveManagement.Properties.Settings.GlobalReference.Default.GrifindoToysConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RosterTableAdapter" GeneratorDataComponentClassName="RosterTableAdapter" Name="Roster" UserDataComponentName="RosterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GrifindoToysConnectionString (Settings)" DbObjectName="GrifindoToys.dbo.Roster" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Roster] WHERE (([EmployeeID] = @Original_EmployeeID) AND ([DutyDate] = @Original_DutyDate) AND ([StartingTime] = @Original_StartingTime) AND ([EndingTime] = @Original_EndingTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DutyDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DutyDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Original_StartingTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="StartingTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Original_EndingTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="EndingTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Roster] ([EmployeeID], [DutyDate], [StartingTime], [EndingTime]) VALUES (@EmployeeID, @DutyDate, @StartingTime, @EndingTime);
SELECT EmployeeID, DutyDate, StartingTime, EndingTime FROM Roster WHERE (DutyDate = @DutyDate) AND (EmployeeID = @EmployeeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DutyDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DutyDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@StartingTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="StartingTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@EndingTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="EndingTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EmployeeID, DutyDate, StartingTime, EndingTime FROM dbo.Roster</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Roster] SET [EmployeeID] = @EmployeeID, [DutyDate] = @DutyDate, [StartingTime] = @StartingTime, [EndingTime] = @EndingTime WHERE (([EmployeeID] = @Original_EmployeeID) AND ([DutyDate] = @Original_DutyDate) AND ([StartingTime] = @Original_StartingTime) AND ([EndingTime] = @Original_EndingTime));
SELECT EmployeeID, DutyDate, StartingTime, EndingTime FROM Roster WHERE (DutyDate = @DutyDate) AND (EmployeeID = @EmployeeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DutyDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DutyDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@StartingTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="StartingTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@EndingTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="EndingTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DutyDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DutyDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Original_StartingTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="StartingTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Original_EndingTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="EndingTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EmployeeID" DataSetColumn="EmployeeID" />
              <Mapping SourceColumn="DutyDate" DataSetColumn="DutyDate" />
              <Mapping SourceColumn="StartingTime" DataSetColumn="StartingTime" />
              <Mapping SourceColumn="EndingTime" DataSetColumn="EndingTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GrifindoToysDataSet3" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="GrifindoToysDataSet3" msprop:Generator_DataSetName="GrifindoToysDataSet3">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Roster" msprop:Generator_RowEvHandlerName="RosterRowChangeEventHandler" msprop:Generator_RowDeletedName="RosterRowDeleted" msprop:Generator_RowDeletingName="RosterRowDeleting" msprop:Generator_RowEvArgName="RosterRowChangeEvent" msprop:Generator_TablePropName="Roster" msprop:Generator_RowChangedName="RosterRowChanged" msprop:Generator_RowChangingName="RosterRowChanging" msprop:Generator_TableClassName="RosterDataTable" msprop:Generator_RowClassName="RosterRow" msprop:Generator_TableVarName="tableRoster" msprop:Generator_UserTableName="Roster">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EmployeeID" msprop:Generator_ColumnPropNameInRow="EmployeeID" msprop:Generator_ColumnPropNameInTable="EmployeeIDColumn" msprop:Generator_ColumnVarNameInTable="columnEmployeeID" msprop:Generator_UserColumnName="EmployeeID" type="xs:int" />
              <xs:element name="DutyDate" msprop:Generator_ColumnPropNameInRow="DutyDate" msprop:Generator_ColumnPropNameInTable="DutyDateColumn" msprop:Generator_ColumnVarNameInTable="columnDutyDate" msprop:Generator_UserColumnName="DutyDate" type="xs:dateTime" />
              <xs:element name="StartingTime" msprop:Generator_ColumnPropNameInRow="StartingTime" msprop:Generator_ColumnPropNameInTable="StartingTimeColumn" msprop:Generator_ColumnVarNameInTable="columnStartingTime" msprop:Generator_UserColumnName="StartingTime" type="xs:duration" />
              <xs:element name="EndingTime" msprop:Generator_ColumnPropNameInRow="EndingTime" msprop:Generator_ColumnPropNameInTable="EndingTimeColumn" msprop:Generator_ColumnVarNameInTable="columnEndingTime" msprop:Generator_UserColumnName="EndingTime" type="xs:duration" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Roster" />
      <xs:field xpath="mstns:EmployeeID" />
      <xs:field xpath="mstns:DutyDate" />
    </xs:unique>
  </xs:element>
</xs:schema>